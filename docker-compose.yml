services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: logistic-postgres
    environment:
      POSTGRES_DB: logistic_control
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - logistic-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache & Message Broker
  redis:
    image: redis:7-alpine
    container_name: logistic-redis
    command: redis-server --appendonly yes --requirepass redis_password
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - logistic-network
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3

  planner-api:
    build:
      context: .
      dockerfile: planner-api/Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - postgres
      - rabbitmq
    networks:
      - logistic-network
    environment:
      - DB_HOST=postgres
      - REDIS_HOST=redis
      - REDIS_PASSWORD=redis_password

  driver-api:
    build:
      context: .
      dockerfile: driver-api/Dockerfile
    ports:
      - "3001:3000"
    depends_on:
      - postgres
      - rabbitmq
    networks:
      - logistic-network
    environment:
      - DB_HOST=postgres
      - REDIS_HOST=redis
      - REDIS_PASSWORD=redis_password

  # PostgreSQL Admin Interface (pgAdmin)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: logistic-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@logistic.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "8080:80"
    depends_on:
      - postgres
    networks:
      - logistic-network
    volumes:
      - pgadmin_data:/var/lib/pgadmin
  # Redis Commander (ARM64 desteği olmadığı için şu an devre dışı)
  # redis-commander:
  #   image: rediscommander/redis-commander:latest
  #   platform: linux/arm64/v8
  #   container_name: logistic-redis-commander
  #   environment:
  #     REDIS_HOSTS: local:redis:6379:0:redis_password
  #     HTTP_USER: admin
  #     HTTP_PASSWORD: admin123
  #   ports:
  #     - "8081:8081"
  #   depends_on:
  #     - redis
  #   networks:
  #     - logistic-network

  # RabbitMQ
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - logistic-network
  # Named Volumes
volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local

# Networks
networks:
  logistic-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
